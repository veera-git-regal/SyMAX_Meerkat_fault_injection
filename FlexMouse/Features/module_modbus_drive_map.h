/**
  ***************************************************************************************************
  * @file    module_modbus_drive_map.h 
  * @author  Regal Myron Mychal
  * @version V1.0
  * @date    15-Jun-2021
  * @brief   Macros for defining register map in drive micro
  * @note    
  ***************************************************************************************************
  */
//^** Tips: APPs/Drivers adding process example step6  [refer to user manual ) 

/* Define to prevent recursive inclusion -------------------------------------*/
#ifndef _MODULE_MODBUS_DRIVE_MAP_H_
#define _MODULE_MODBUS_DRIVE_MAP_H_

/* Includes ------------------------------------------------------------------*/
#include "structured_memory.h"
#include "scheduler.h"
#include "ring_buffer.h"
#include "module_modbus.h"
#include "regal_mc_settings.h"
#include "module_EEP.h"
#include "module_test.h"
#include "module_dynamic.h"

extern DriveData_Control dynamic_data;
extern DriveData_Control driveData_Control;
extern ModbusRtu_Control modbusRtu_Control;	// structure from modbus module
extern MotorId_Control motorId_Control;
extern StartupParameters_Control startupParameters_Control;
extern MotorParameters_Control motorParameters_Control;
extern MotorTunning01_Control motorTunning01_Control;
extern MotorTunning02_Control motorTunning02_Control;
extern MotorLimits01_Control motorLimits01_Control;
extern MotorProtections01_Control motorProtections01_Control;
extern MotorProtections02_Control motorProtections02_Control;
//extern FanParameters_Control fanParameters_Control;
extern OtfParameters_Control otfParameters_Control;
extern BrakingParameters_Control brakingParameters_Control;
//extern WindMillingParameters_Control windMillingParameters_Control;
extern HardwareSpecificParameters_Control hardwareSpecificParameters_Control;
extern ApplicationSpecificParameters_Control applicationSpecificParameters_Control;
extern ModuleTest_Control moduleTest_Control;
extern HarmonicCompensation01_Control harmonicCompensation01_Control;
extern HarmonicCompensation02_Control harmonicCompensation02_Control;
extern HarmonicCompensation03_Control harmonicCompensation03_Control;
extern ModuleFlash_Control moduleFlash_Control;
extern ModuleEEPROM_Control moduleEEPROM_Control;
extern StParameters01_Control stParameters01_Control;

// Template for module modbus address map structure
#define	DRIVE_MAX_COILS		(16)	// maximum number of modbus coils allowed for a single module
#define	DRIVE_MAX_DISCRETES	(24)	// maximum number of modbus discrete registers allowed for a single module
#define DRIVE_MAX_INPUTS	(64)	// maximum number of modbus input registers allowed for a single module
#define	DRIVE_MAX_HOLDINGS	(152)	// maximum bumber of modbus holding registers allowed for a single module

// structure for Drive Data Module
// number of each type of modbus data element in the module
#define MODULE_DRIVE_DATA_NUMBER_OF_INPUTS            (32)
#define MODULE_DRIVE_DATA_NUMBER_OF_HOLDINGS          (20)

#define MODULE_DRIVE_DATA_NUMBER_OF_USER_INPUTS       (13)
#define MODULE_DRIVE_DATA_NUMBER_OF_USER_HOLDINGS     (0)
// address for the start of each element type within the module
#define MODULE_DRIVE_DATA_GROUP                       (0)
#define MODULE_DRIVE_DATA_BASE_ADDRESS                (MODULE_DRIVE_DATA_GROUP<<8)
#define	MODULE_DRIVE_DATA_START_OF_COILS_ADDRESS      (MODULE_DRIVE_DATA_BASE_ADDRESS + 0)
#define MODULE_DRIVE_DATA_START_OF_DISCRETES_ADDRESS  (MODULE_DRIVE_DATA_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_DRIVE_DATA_START_OF_INPUTS_ADDRESS     (MODULE_DRIVE_DATA_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_DRIVE_DATA_START_OF_HOLDINGS_ADDRESS   (MODULE_DRIVE_DATA_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_DRIVE_DATA_END_OF_GROUP		      (MODULE_DRIVE_DATA_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Modbus RTU module
// number of each type of modbus data element in the module
#define MODULE_DRIVE_MODBUS_NUMBER_OF_INPUTS            (14)
#define MODULE_DRIVE_MODBUS_NUMBER_OF_HOLDINGS          (24)

#define MODULE_DRIVE_MODBUS_NUMBER_OF_USER_INPUTS       (0)
#define MODULE_DRIVE_MODBUS_NUMBER_OF_USER_HOLDINGS     (0)

// address for the start of each element type within the module
#define MODULE_DRIVE_MODBUS_GROUP			(1)
#define MODULE_DRIVE_MODBUS_BASE_ADDRESS		(MODULE_DRIVE_MODBUS_GROUP<<8)
#define	MODULE_DRIVE_MODBUS_START_OF_COILS_ADDRESS	(MODULE_DRIVE_MODBUS_BASE_ADDRESS + 0)
#define MODULE_DRIVE_MODBUS_START_OF_DISCRETES_ADDRESS	(MODULE_DRIVE_MODBUS_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_DRIVE_MODBUS_START_OF_INPUTS_ADDRESS	(MODULE_DRIVE_MODBUS_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_DRIVE_MODBUS_START_OF_HOLDINGS_ADDRESS   (MODULE_DRIVE_MODBUS_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_DRIVE_MODBUS_END_OF_GROUP		(MODULE_DRIVE_MODBUS_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for ID module
// number of each type of modbus data element in the module
#define MODULE_DRIVE_ID_NUMBER_OF_INPUTS              (37)
#define MODULE_DRIVE_ID_NUMBER_OF_HOLDINGS            (20)

#define MODULE_DRIVE_ID_NUMBER_OF_USER_INPUTS         (20)
#define MODULE_DRIVE_ID_NUMBER_OF_USER_HOLDINGS       (1)

// address for the start of each element type within the module
#define MODULE_DRIVE_ID_GROUP                         (2) 
#define MODULE_DRIVE_ID_BASE_ADDRESS                  (MODULE_DRIVE_ID_GROUP<<8)
#define	MODULE_DRIVE_ID_START_OF_COILS_ADDRESS        (MODULE_DRIVE_ID_BASE_ADDRESS + 0)
#define MODULE_DRIVE_ID_START_OF_DISCRETES_ADDRESS    (MODULE_DRIVE_ID_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_DRIVE_ID_START_OF_INPUTS_ADDRESS       (MODULE_DRIVE_ID_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_DRIVE_ID_START_OF_HOLDINGS_ADDRESS     (MODULE_DRIVE_ID_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_DRIVE_ID_END_OF_GROUP                  (MODULE_DRIVE_ID_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Start-up module
// number of each type of modbus data element in the module
#define MODULE_START_UP_NUMBER_OF_INPUTS              (14)
#define MODULE_START_UP_NUMBER_OF_HOLDINGS            (26)

#define MODULE_START_UP_NUMBER_OF_USER_INPUTS         (0)
#define MODULE_START_UP_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_START_UP_GROUP                         (3) 
#define MODULE_START_UP_BASE_ADDRESS                  (MODULE_START_UP_GROUP<<8)
#define	MODULE_START_UP_START_OF_COILS_ADDRESS        (MODULE_START_UP_BASE_ADDRESS + 0)
#define MODULE_START_UP_START_OF_DISCRETES_ADDRESS    (MODULE_START_UP_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_START_UP_START_OF_INPUTS_ADDRESS       (MODULE_START_UP_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_START_UP_START_OF_HOLDINGS_ADDRESS     (MODULE_START_UP_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_START_UP_END_OF_GROUP                  (MODULE_START_UP_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Motor parameters module
// number of each type of modbus data element in the module
#define MODULE_MOTOR_PARAM_NUMBER_OF_INPUTS              (12)
#define MODULE_MOTOR_PARAM_NUMBER_OF_HOLDINGS            (26)

#define MODULE_MOTOR_PARAM_NUMBER_OF_USER_INPUTS         (0)
#define MODULE_MOTOR_PARAM_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_MOTOR_PARAM_GROUP                         (4) 
#define MODULE_MOTOR_PARAM_BASE_ADDRESS                  (MODULE_MOTOR_PARAM_GROUP<<8)
#define	MODULE_MOTOR_PARAM_START_OF_COILS_ADDRESS        (MODULE_MOTOR_PARAM_BASE_ADDRESS + 0)
#define MODULE_MOTOR_PARAM_START_OF_DISCRETES_ADDRESS    (MODULE_MOTOR_PARAM_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_MOTOR_PARAM_START_OF_INPUTS_ADDRESS       (MODULE_MOTOR_PARAM_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_MOTOR_PARAM_START_OF_HOLDINGS_ADDRESS     (MODULE_MOTOR_PARAM_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_MOTOR_PARAM_END_OF_GROUP                  (MODULE_MOTOR_PARAM_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Motor Turning parameters module
// number of each type of modbus data element in the module
#define MODULE_TUNING01_PARAM_NUMBER_OF_INPUTS              (12)
#define MODULE_TUNING01_PARAM_NUMBER_OF_HOLDINGS            (30)

#define MODULE_TUNING01_PARAM_NUMBER_OF_USER_INPUTS         (1)
#define MODULE_TUNING01_PARAM_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_TUNING01_PARAM_GROUP                         (5) 
#define MODULE_TUNING01_PARAM_BASE_ADDRESS                  (MODULE_TUNING01_PARAM_GROUP<<8)
#define	MODULE_TUNING01_PARAM_START_OF_COILS_ADDRESS        (MODULE_TUNING01_PARAM_BASE_ADDRESS + 0)
#define MODULE_TUNING01_PARAM_START_OF_DISCRETES_ADDRESS    (MODULE_TUNING01_PARAM_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_TUNING01_PARAM_START_OF_INPUTS_ADDRESS       (MODULE_TUNING01_PARAM_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_TUNING01_PARAM_START_OF_HOLDINGS_ADDRESS     (MODULE_TUNING01_PARAM_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_TUNING01_PARAM_END_OF_GROUP                  (MODULE_TUNING01_PARAM_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Motor Turning parameters module
// number of each type of modbus data element in the module
#define MODULE_TUNING02_PARAM_NUMBER_OF_INPUTS              (12)
#define MODULE_TUNING02_PARAM_NUMBER_OF_HOLDINGS            (30)

#define MODULE_TUNING02_PARAM_NUMBER_OF_USER_INPUTS         (1)
#define MODULE_TUNING02_PARAM_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_TUNING02_PARAM_GROUP                         (6) 
#define MODULE_TUNING02_PARAM_BASE_ADDRESS                  (MODULE_TUNING02_PARAM_GROUP<<8)
#define	MODULE_TUNING02_PARAM_START_OF_COILS_ADDRESS        (MODULE_TUNING02_PARAM_BASE_ADDRESS + 0)
#define MODULE_TUNING02_PARAM_START_OF_DISCRETES_ADDRESS    (MODULE_TUNING02_PARAM_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_TUNING02_PARAM_START_OF_INPUTS_ADDRESS       (MODULE_TUNING02_PARAM_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_TUNING02_PARAM_START_OF_HOLDINGS_ADDRESS     (MODULE_TUNING02_PARAM_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_TUNING02_PARAM_END_OF_GROUP                  (MODULE_TUNING02_PARAM_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Limits module
// number of each type of modbus data element in the module
#define MODULE_DRIVE_LIMITS01_NUMBER_OF_INPUTS              (12)
#define MODULE_DRIVE_LIMITS01_NUMBER_OF_HOLDINGS            (30)

#define MODULE_DRIVE_LIMITS01_NUMBER_OF_USER_INPUTS         (1)
#define MODULE_DRIVE_LIMITS01_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_DRIVE_LIMITS01_GROUP                         (7) 
#define MODULE_DRIVE_LIMITS01_BASE_ADDRESS                  (MODULE_DRIVE_LIMITS01_GROUP<<8)
#define	MODULE_DRIVE_LIMITS01_START_OF_COILS_ADDRESS        (MODULE_DRIVE_LIMITS01_BASE_ADDRESS + 0)
#define MODULE_DRIVE_LIMITS01_START_OF_DISCRETES_ADDRESS    (MODULE_DRIVE_LIMITS01_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_DRIVE_LIMITS01_START_OF_INPUTS_ADDRESS       (MODULE_DRIVE_LIMITS01_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_DRIVE_LIMITS01_START_OF_HOLDINGS_ADDRESS     (MODULE_DRIVE_LIMITS01_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_DRIVE_LIMITS01_END_OF_GROUP                  (MODULE_DRIVE_LIMITS01_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Limits module
// number of each type of modbus data element in the module
#define MODULE_DRIVE_LIMITS02_NUMBER_OF_INPUTS              (0)
#define MODULE_DRIVE_LIMITS02_NUMBER_OF_HOLDINGS            (0)

#define MODULE_DRIVE_LIMITS02_NUMBER_OF_USER_INPUTS         (0)
#define MODULE_DRIVE_LIMITS02_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_DRIVE_LIMITS02_GROUP                         (8) 
#define MODULE_DRIVE_LIMITS02_BASE_ADDRESS                  (MODULE_DRIVE_LIMITS02_GROUP<<8)
#define	MODULE_DRIVE_LIMITS02_START_OF_COILS_ADDRESS        (MODULE_DRIVE_LIMITS02_BASE_ADDRESS + 0)
#define MODULE_DRIVE_LIMITS02_START_OF_DISCRETES_ADDRESS    (MODULE_DRIVE_LIMITS02_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_DRIVE_LIMITS02_START_OF_INPUTS_ADDRESS       (MODULE_DRIVE_LIMITS02_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_DRIVE_LIMITS02_START_OF_HOLDINGS_ADDRESS     (MODULE_DRIVE_LIMITS02_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_DRIVE_LIMITS02_END_OF_GROUP                  (MODULE_DRIVE_LIMITS02_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Protections module
// number of each type of modbus data element in the module
#define MODULE_DRIVE_PROTECTIONS01_NUMBER_OF_INPUTS              (14)
#define MODULE_DRIVE_PROTECTIONS01_NUMBER_OF_HOLDINGS            (30)

#define MODULE_DRIVE_PROTECTIONS01_NUMBER_OF_USER_INPUTS         (1)
#define MODULE_DRIVE_PROTECTIONS01_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_DRIVE_PROTECTIONS01_GROUP                         (9) 
#define MODULE_DRIVE_PROTECTIONS01_BASE_ADDRESS                  (MODULE_DRIVE_PROTECTIONS01_GROUP<<8)
#define	MODULE_DRIVE_PROTECTIONS01_START_OF_COILS_ADDRESS        (MODULE_DRIVE_PROTECTIONS01_BASE_ADDRESS + 0)
#define MODULE_DRIVE_PROTECTIONS01_START_OF_DISCRETES_ADDRESS    (MODULE_DRIVE_PROTECTIONS01_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_DRIVE_PROTECTIONS01_START_OF_INPUTS_ADDRESS       (MODULE_DRIVE_PROTECTIONS01_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_DRIVE_PROTECTIONS01_START_OF_HOLDINGS_ADDRESS     (MODULE_DRIVE_PROTECTIONS01_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_DRIVE_PROTECTIONS01_END_OF_GROUP                  (MODULE_DRIVE_PROTECTIONS01_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Protections module
// number of each type of modbus data element in the module
#define MODULE_DRIVE_PROTECTIONS02_NUMBER_OF_INPUTS              (14)
#define MODULE_DRIVE_PROTECTIONS02_NUMBER_OF_HOLDINGS            (20)

#define MODULE_DRIVE_PROTECTIONS02_NUMBER_OF_USER_INPUTS         (1)
#define MODULE_DRIVE_PROTECTIONS02_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_DRIVE_PROTECTIONS02_GROUP                         (10) 
#define MODULE_DRIVE_PROTECTIONS02_BASE_ADDRESS                  (MODULE_DRIVE_PROTECTIONS02_GROUP<<8)
#define	MODULE_DRIVE_PROTECTIONS02_START_OF_COILS_ADDRESS        (MODULE_DRIVE_PROTECTIONS02_BASE_ADDRESS + 0)
#define MODULE_DRIVE_PROTECTIONS02_START_OF_DISCRETES_ADDRESS    (MODULE_DRIVE_PROTECTIONS02_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_DRIVE_PROTECTIONS02_START_OF_INPUTS_ADDRESS       (MODULE_DRIVE_PROTECTIONS02_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_DRIVE_PROTECTIONS02_START_OF_HOLDINGS_ADDRESS     (MODULE_DRIVE_PROTECTIONS02_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_DRIVE_PROTECTIONS02_END_OF_GROUP                  (MODULE_DRIVE_PROTECTIONS02_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Protections module
// number of each type of modbus data element in the module
#define MODULE_DRIVE_PROTECTIONS03_NUMBER_OF_INPUTS              (0)
#define MODULE_DRIVE_PROTECTIONS03_NUMBER_OF_HOLDINGS            (0)

#define MODULE_DRIVE_PROTECTIONS03_NUMBER_OF_USER_INPUTS         (0)
#define MODULE_DRIVE_PROTECTIONS03_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_DRIVE_PROTECTIONS03_GROUP                         (11) 
#define MODULE_DRIVE_PROTECTIONS03_BASE_ADDRESS                  (MODULE_DRIVE_PROTECTIONS03_GROUP<<8)
#define	MODULE_DRIVE_PROTECTIONS03_START_OF_COILS_ADDRESS        (MODULE_DRIVE_PROTECTIONS03_BASE_ADDRESS + 0)
#define MODULE_DRIVE_PROTECTIONS03_START_OF_DISCRETES_ADDRESS    (MODULE_DRIVE_PROTECTIONS03_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_DRIVE_PROTECTIONS03_START_OF_INPUTS_ADDRESS       (MODULE_DRIVE_PROTECTIONS03_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_DRIVE_PROTECTIONS03_START_OF_HOLDINGS_ADDRESS     (MODULE_DRIVE_PROTECTIONS03_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_DRIVE_PROTECTIONS03_END_OF_GROUP                  (MODULE_DRIVE_PROTECTIONS03_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for braking parameters module
// number of each type of modbus data element in the module
#define MODULE_BRAKING_PARAM_NUMBER_OF_INPUTS              (12)
#define MODULE_BRAKING_PARAM_NUMBER_OF_HOLDINGS            (20)

#define MODULE_BRAKING_PARAM_NUMBER_OF_USER_INPUTS         (1)
#define MODULE_BRAKING_PARAM_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_BRAKING_PARAM_GROUP                         (12) 
#define MODULE_BRAKING_PARAM_BASE_ADDRESS                  (MODULE_BRAKING_PARAM_GROUP<<8)
#define	MODULE_BRAKING_PARAM_START_OF_COILS_ADDRESS        (MODULE_BRAKING_PARAM_BASE_ADDRESS + 0)
#define MODULE_BRAKING_PARAM_START_OF_DISCRETES_ADDRESS    (MODULE_BRAKING_PARAM_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_BRAKING_PARAM_START_OF_INPUTS_ADDRESS       (MODULE_BRAKING_PARAM_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_BRAKING_PARAM_START_OF_HOLDINGS_ADDRESS     (MODULE_BRAKING_PARAM_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_BRAKING_PARAM_END_OF_GROUP                  (MODULE_BRAKING_PARAM_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)


// structure for On The Fly module
// number of each type of modbus data element in the module
#define MODULE_OTF_PARAM_NUMBER_OF_INPUTS              (12)
#define MODULE_OTF_PARAM_NUMBER_OF_HOLDINGS            (24)

#define MODULE_OTF_PARAM_NUMBER_OF_USER_INPUTS         (1)
#define MODULE_OTF_PARAM_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_OTF_PARAM_GROUP                         (13) 
#define MODULE_OTF_PARAM_BASE_ADDRESS                  (MODULE_OTF_PARAM_GROUP<<8)
#define	MODULE_OTF_PARAM_START_OF_COILS_ADDRESS        (MODULE_OTF_PARAM_BASE_ADDRESS + 0)
#define MODULE_OTF_PARAM_START_OF_DISCRETES_ADDRESS    (MODULE_OTF_PARAM_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_OTF_PARAM_START_OF_INPUTS_ADDRESS       (MODULE_OTF_PARAM_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_OTF_PARAM_START_OF_HOLDINGS_ADDRESS     (MODULE_OTF_PARAM_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_OTF_PARAM_END_OF_GROUP                  (MODULE_OTF_PARAM_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)


//// structure for windmilling parameters module
//// number of each type of modbus data element in the module
//#define MODULE_WINDMILL_PARAM_NUMBER_OF_INPUTS              (1)
//#define MODULE_WINDMILL_PARAM_NUMBER_OF_HOLDINGS            (18)
//
//#define MODULE_WINDMILL_PARAM_NUMBER_OF_USER_INPUTS         (0)
//#define MODULE_WINDMILL_PARAM_NUMBER_OF_USER_HOLDINGS       (0)
//
//// address for the start of each element type within the module
//#define MODULE_WINDMILL_PARAM_GROUP                         (13) 
//#define MODULE_WINDMILL_PARAM_BASE_ADDRESS                  (MODULE_WINDMILL_PARAM_GROUP<<8)
//#define MODULE_WINDMILL_PARAM_START_OF_COILS_ADDRESS        (MODULE_WINDMILL_PARAM_BASE_ADDRESS + 0)
//#define MODULE_WINDMILL_PARAM_START_OF_DISCRETES_ADDRESS    (MODULE_WINDMILL_PARAM_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
//#define MODULE_WINDMILL_PARAM_START_OF_INPUTS_ADDRESS       (MODULE_WINDMILL_PARAM_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
//#define MODULE_WINDMILL_PARAM_START_OF_HOLDINGS_ADDRESS     (MODULE_WINDMILL_PARAM_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
//#define MODULE_WINDMILL_PARAM_END_OF_GROUP                  (MODULE_WINDMILL_PARAM_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for hardware specific parameters module
// number of each type of modbus data element in the module
#define MODULE_DRIVE_HW_SPECIFIC_NUMBER_OF_INPUTS              (14)
#define MODULE_DRIVE_HW_SPECIFIC_NUMBER_OF_HOLDINGS            (26)

#define MODULE_DRIVE_HW_SPECIFIC_NUMBER_OF_USER_INPUTS         (1)
#define MODULE_DRIVE_HW_SPECIFIC_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_DRIVE_HW_SPECIFIC_GROUP                         (14) 
#define MODULE_DRIVE_HW_SPECIFIC_BASE_ADDRESS                  (MODULE_DRIVE_HW_SPECIFIC_GROUP<<8)
#define	MODULE_DRIVE_HW_SPECIFIC_START_OF_COILS_ADDRESS        (MODULE_DRIVE_HW_SPECIFIC_BASE_ADDRESS + 0)
#define MODULE_DRIVE_HW_SPECIFIC_START_OF_DISCRETES_ADDRESS    (MODULE_DRIVE_HW_SPECIFIC_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_DRIVE_HW_SPECIFIC_START_OF_INPUTS_ADDRESS       (MODULE_DRIVE_HW_SPECIFIC_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_DRIVE_HW_SPECIFIC_START_OF_HOLDINGS_ADDRESS     (MODULE_DRIVE_HW_SPECIFIC_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_DRIVE_HW_SPECIFIC_END_OF_GROUP                  (MODULE_DRIVE_HW_SPECIFIC_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for App Specific Parameters module
// number of each type of modbus data element in the module
#define MODULE_DRIVE_APP_SPECIFIC_NUMBER_OF_INPUTS              (14)
#define MODULE_DRIVE_APP_SPECIFIC_NUMBER_OF_HOLDINGS            (26)

#define MODULE_DRIVE_APP_SPECIFIC_NUMBER_OF_USER_INPUTS         (1)
#define MODULE_DRIVE_APP_SPECIFIC_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_DRIVE_APP_SPECIFIC_GROUP                         (15) 
#define MODULE_DRIVE_APP_SPECIFIC_BASE_ADDRESS                  (MODULE_DRIVE_APP_SPECIFIC_GROUP<<8)
#define	MODULE_DRIVE_APP_SPECIFIC_START_OF_COILS_ADDRESS        (MODULE_DRIVE_APP_SPECIFIC_BASE_ADDRESS + 0)
#define MODULE_DRIVE_APP_SPECIFIC_START_OF_DISCRETES_ADDRESS    (MODULE_DRIVE_APP_SPECIFIC_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_DRIVE_APP_SPECIFIC_START_OF_INPUTS_ADDRESS       (MODULE_DRIVE_APP_SPECIFIC_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_DRIVE_APP_SPECIFIC_START_OF_HOLDINGS_ADDRESS     (MODULE_DRIVE_APP_SPECIFIC_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_DRIVE_APP_SPECIFIC_END_OF_GROUP                  (MODULE_DRIVE_APP_SPECIFIC_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Harmonic Compenstaion Parameters module
// number of each type of modbus data element in the module
#define MODULE_HC01_PARAM_NUMBER_OF_INPUTS              (14)
#define MODULE_HC01_PARAM_NUMBER_OF_HOLDINGS            (30)

#define MODULE_HC01_PARAM_NUMBER_OF_USER_INPUTS         (1)
#define MODULE_HC01_PARAM_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_HC01_PARAM_GROUP                         (16) 
#define MODULE_HC01_PARAM_BASE_ADDRESS                  (MODULE_HC01_PARAM_GROUP<<8)
#define	MODULE_HC01_PARAM_START_OF_COILS_ADDRESS        (MODULE_HC01_PARAM_BASE_ADDRESS + 0)
#define MODULE_HC01_PARAM_START_OF_DISCRETES_ADDRESS    (MODULE_HC01_PARAM_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_HC01_PARAM_START_OF_INPUTS_ADDRESS       (MODULE_HC01_PARAM_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_HC01_PARAM_START_OF_HOLDINGS_ADDRESS     (MODULE_HC01_PARAM_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_HC01_PARAM_END_OF_GROUP                  (MODULE_HC01_PARAM_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Harmonic Compenstaion Parameters module
// number of each type of modbus data element in the module
#define MODULE_HC02_PARAM_NUMBER_OF_INPUTS              (14)
#define MODULE_HC02_PARAM_NUMBER_OF_HOLDINGS            (30)

#define MODULE_HC02_PARAM_NUMBER_OF_USER_INPUTS         (1)
#define MODULE_HC02_PARAM_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_HC02_PARAM_GROUP                         (17) 
#define MODULE_HC02_PARAM_BASE_ADDRESS                  (MODULE_HC02_PARAM_GROUP<<8)
#define	MODULE_HC02_PARAM_START_OF_COILS_ADDRESS        (MODULE_HC02_PARAM_BASE_ADDRESS + 0)
#define MODULE_HC02_PARAM_START_OF_DISCRETES_ADDRESS    (MODULE_HC02_PARAM_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_HC02_PARAM_START_OF_INPUTS_ADDRESS       (MODULE_HC02_PARAM_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_HC02_PARAM_START_OF_HOLDINGS_ADDRESS     (MODULE_HC02_PARAM_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_HC02_PARAM_END_OF_GROUP                  (MODULE_HC02_PARAM_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Harmonic Compenstaion Parameters module
// number of each type of modbus data element in the module
#define MODULE_HC03_PARAM_NUMBER_OF_INPUTS              (14)
#define MODULE_HC03_PARAM_NUMBER_OF_HOLDINGS            (30)

#define MODULE_HC03_PARAM_NUMBER_OF_USER_INPUTS         (1)
#define MODULE_HC03_PARAM_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_HC03_PARAM_GROUP                         (18) 
#define MODULE_HC03_PARAM_BASE_ADDRESS                  (MODULE_HC03_PARAM_GROUP<<8)
#define	MODULE_HC03_PARAM_START_OF_COILS_ADDRESS        (MODULE_HC03_PARAM_BASE_ADDRESS + 0)
#define MODULE_HC03_PARAM_START_OF_DISCRETES_ADDRESS    (MODULE_HC03_PARAM_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_HC03_PARAM_START_OF_INPUTS_ADDRESS       (MODULE_HC03_PARAM_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_HC03_PARAM_START_OF_HOLDINGS_ADDRESS     (MODULE_HC03_PARAM_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_HC03_PARAM_END_OF_GROUP                  (MODULE_HC03_PARAM_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Harmonic Compenstaion Parameters module
// number of each type of modbus data element in the module
#define MODULE_DRIVE_FLASH_NUMBER_OF_INPUTS              (14)
#define MODULE_DRIVE_FLASH_NUMBER_OF_HOLDINGS            (14)

#define MODULE_DRIVE_FLASH_NUMBER_OF_USER_INPUTS         (3)
#define MODULE_DRIVE_FLASH_NUMBER_OF_USER_HOLDINGS       (3)

// address for the start of each element type within the module
#define MODULE_DRIVE_FLASH_GROUP                         (19)
#define MODULE_DRIVE_FLASH_BASE_ADDRESS                  (MODULE_DRIVE_FLASH_GROUP<<8)
#define	MODULE_DRIVE_FLASH_START_OF_COILS_ADDRESS        (MODULE_DRIVE_FLASH_BASE_ADDRESS + 0)
#define MODULE_DRIVE_FLASH_START_OF_DISCRETES_ADDRESS    (MODULE_DRIVE_FLASH_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_DRIVE_FLASH_START_OF_INPUTS_ADDRESS       (MODULE_DRIVE_FLASH_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_DRIVE_FLASH_START_OF_HOLDINGS_ADDRESS     (MODULE_DRIVE_FLASH_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_DRIVE_FLASH_END_OF_GROUP                  (MODULE_DRIVE_FLASH_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// Structure for EEPROM module
// number of each type of modbus data element in the module
#define MODULE_EEPROM_NUMBER_OF_INPUTS              (22)
#define MODULE_EEPROM_NUMBER_OF_HOLDINGS            (28)

#define MODULE_EEPROM_NUMBER_OF_USER_INPUTS         (0)
#define MODULE_EEPROM_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_EEPROM_GROUP                         (20) 
#define MODULE_EEPROM_BASE_ADDRESS                  (MODULE_EEPROM_GROUP<<8)
#define	MODULE_EEPROM_START_OF_COILS_ADDRESS        (MODULE_EEPROM_BASE_ADDRESS + 0)
#define MODULE_EEPROM_START_OF_DISCRETES_ADDRESS    (MODULE_EEPROM_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_EEPROM_START_OF_INPUTS_ADDRESS       (MODULE_EEPROM_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_EEPROM_START_OF_HOLDINGS_ADDRESS     (MODULE_EEPROM_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_EEPROM_END_OF_GROUP                  (MODULE_EEPROM_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Test Parameters module
// number of each type of modbus data element in the module
#define MODULE_DRIVE_TEST_PARAM_NUMBER_OF_INPUTS              (14)
#define MODULE_DRIVE_TEST_PARAM_NUMBER_OF_HOLDINGS            (22)

#define MODULE_DRIVE_TEST_PARAM_NUMBER_OF_USER_INPUTS         (4)
#define MODULE_DRIVE_TEST_PARAM_NUMBER_OF_USER_HOLDINGS       (11)

// address for the start of each element type within the module
#define MODULE_DRIVE_TEST_PARAM_GROUP                         (21) 
#define MODULE_DRIVE_TEST_PARAM_BASE_ADDRESS                  (MODULE_DRIVE_TEST_PARAM_GROUP<<8)
#define	MODULE_DRIVE_TEST_PARAM_START_OF_COILS_ADDRESS        (MODULE_DRIVE_TEST_PARAM_BASE_ADDRESS + 0)
#define MODULE_DRIVE_TEST_PARAM_START_OF_DISCRETES_ADDRESS    (MODULE_DRIVE_TEST_PARAM_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_DRIVE_TEST_PARAM_START_OF_INPUTS_ADDRESS       (MODULE_DRIVE_TEST_PARAM_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_DRIVE_TEST_PARAM_START_OF_HOLDINGS_ADDRESS     (MODULE_DRIVE_TEST_PARAM_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_DRIVE_TEST_PARAM_END_OF_GROUP                  (MODULE_DRIVE_TEST_PARAM_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

// structure for Test Parameters module
// number of each type of modbus data element in the module
#define MODULE_ST_MC_PARAM01_NUMBER_OF_INPUTS              (12)
#define MODULE_ST_MC_PARAM01_NUMBER_OF_HOLDINGS            (12)

#define MODULE_ST_MC_PARAM01_NUMBER_OF_USER_INPUTS         (0)
#define MODULE_ST_MC_PARAM01_NUMBER_OF_USER_HOLDINGS       (0)

// address for the start of each element type within the module
#define MODULE_ST_MC_PARAM01_GROUP                         (24) 
#define MODULE_ST_MC_PARAM01_BASE_ADDRESS                  (MODULE_ST_MC_PARAM01_GROUP<<8)
#define	MODULE_ST_MC_PARAM01_START_OF_COILS_ADDRESS        (MODULE_ST_MC_PARAM01_BASE_ADDRESS + 0)
#define MODULE_ST_MC_PARAM01_START_OF_DISCRETES_ADDRESS    (MODULE_ST_MC_PARAM01_START_OF_COILS_ADDRESS + DRIVE_MAX_COILS)
#define MODULE_ST_MC_PARAM01_START_OF_INPUTS_ADDRESS       (MODULE_ST_MC_PARAM01_START_OF_DISCRETES_ADDRESS + DRIVE_MAX_DISCRETES)
#define MODULE_ST_MC_PARAM01_START_OF_HOLDINGS_ADDRESS     (MODULE_ST_MC_PARAM01_START_OF_INPUTS_ADDRESS + DRIVE_MAX_INPUTS)
#define	MODULE_ST_MC_PARAM01_END_OF_GROUP                  (MODULE_ST_MC_PARAM01_START_OF_HOLDINGS_ADDRESS + DRIVE_MAX_HOLDINGS)

#endif /* _MODULE_MODBUS_DRIVE_H_ */

